---> Our social media site begins with a login page prompting the user to type in their username and password.
---> Without an account you cannot access the site.
---> *show off other pages with 401 error* 
---> So then we'll return to the home page and click to create an account.

---> Like any secure platform, the user's password must meet all the set requirements.
---> Upon clicking submit, the user will be alerted if they had successfully created an account. 
	If not, they will be alerted as to why.
---> So then we'll create a new account with the username being Covid19 
	and let's try putting a password less than the required length.
---> Immediately the user is rejected and alerted that they have failed to meet the list of requirements as stated.
---> Not lets try another password called stolemywilltolive!
---> It should be rejected due to the fact it does not have any numbers.
---> Now we'll put a password that does meet the all the requirements : SemesterFail1!
---> The user will receive a new alert telling them they can now log in as well as taking them back to the home page.

---> Upon logging in the user is greeted with the home page that contains multimedia content shared by other users.
---> The user is also able to post his or her own content and it will appear at the very top of the page with other users
	being able to see changes in their own time.
---> To show this, we will open another browser in which we will login with another existing account.
---> The only issue that seems to persist is the use of the up vote and down vote buttons 
	which have been disabled for working purposes.

---> The navigation bar above allows the user to navigate to his or her profile, see their friends list, or simply logout.
---> These are functions that have their own pages, but unfortunately these functions are still under construction.

---> If a use tries to go to a page that doesn't exist they will receive a 404 error
--------------------------------------------------

---> Starting with TCP socket connection:
- java.awt library allows us to call for the BufferedImage class, which allows us to access and manipulate 
	an image data. This is used in the process of uploading an image in the Webserver and ClientsInformation class.
	Currently this feature has been disabled to provide a working server
- java.io allows us to call for File, InputStream, InputStreamReader, PrintStream, BufferedReader, and 
	several types of exceptions having to deal with reading stream errors without using the try and catch block. This is used in the 
	process of establishing a TCP socket connection for an input and output, as well as opening a file connection
	in the Webserver class.
- java.math library allows us to call for the BigInteger class, which allows us to manipulate the bits when sending
	image information in the method sendInfo() in the Websocket class.
- java.net allows us to call for Socket and ServerSocket class, which allows us to build communication between the
	client and server. This is used at the very beginning of the Webserver class where we start building the TCP
	socket. 
- java.security library allows us to call for the MessageDigest class, which allows us to secure a hash function
	and output a hash value. This is used to implement the Websocket handshake in Webserver class.
- java.util allows us to call for ArrayList, Base64, HashMap, List, Scanner classes, which allows us to temporary
	keep track of inputs when we read the information being sent like connection, images, votes, comments in the
	Webserver, Websocket, and ClientsInformation class.
- MongoDB is a document database program allowing private information and messages to be stored while it is set up were are pending it's utlization.
---> As of now, data is currently being kept in csv files within our server

---> We have several classes that navigate our server:
- Webserver class is where the TCP Socket server is created. The input stream is taken and parsed according to the header
	response and handled differently depending on the case. This is achieved through the use of makeGETResponse(),
	makePOSTResponse(), handleGETRequest(), and handlePOSTRequest().
- Response is the superclass to GetResponse and POSTResponse which handles each type of response. 
- StatusUpdate class is where the user status like name and time are kept in order to keep track of user content.
- PostResponse class is where the parser for POST HTTP responses send though localhost.
- Authenticate class is where the functions to authenticate the password is used.
- ResponseGenerator class creates the hash to secure user created passwords as java does not contain a BCRYPT library.

---> Using Maven and Docker were able to launch multiple copies of webserver for deployment.

---> Multimedia contains the images used for the site
---> Lastly, the public folder holds all the html, css, and js files which we are hosting on our server.

--------------------------------------------------

---> In developing this software, we realized as a team that planning and development in the first stages is critical and
we should have taken it more seriously. It didn't help that no one was willing to communicate with each other, making the
online process extremely difficult.

---> Because we assumed that we would have working assignments, it didn't occur to us how badly we would fail if half our
assignments didn't work, which is the situation we were in. And it was far too late to study up on new libraries to use.

---> If we started this project today, we would start by creating leadership and membership roles. In that way, everyone
is sure to keep track of responsibilities, impending due dates, and reach for office hours if the rest of us were occupied
with classes.

---> In all honesty working with friends was not as good as an idea like we thought mainly because no one wanted to yell at
each other's faces and when things do go sour we blame each other. We each understand our own capabilities, which in part led
to different perspectives and disagreements.

--->A team mentality is something we all need to improve on if we are going to continue with this career.