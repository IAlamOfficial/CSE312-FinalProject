1. The technologies used and what it accomplishes for us:
	- java.awt library helps read or create graphics and images
	- java.io library helps read input files and streams
	- java.math library helps work with decimal and integer values
	- java.net library helps creating connections and working with sockets
	- java.security library provides classes and interfaces for security framework
	- java.util library provides a collection of data structures available for Java
	- Docker is a software used to create containers to test deployment of a program
	- Maven oversees and helps build configurations for Java

2. How these technologies accomplish what it does:
	- Starting with TCP socket connection:
	- java.awt library allows us to call for the BufferedImage class, which allows us to access and manipulate 
	an image data. This is used in the process of uploading an image in the Webserver and ClientsInformation class.
	- java.io allows us to call for File, InputStream, InputStreamReader, PrintStream, BufferedReader, and 
	several types of exceptions having to deal with reading stream errors without using the try and catch block. This is used in the 
	process of establishing a TCP socket connection for an input and output, as well as opening a file connection
	in the Webserver class.
	- java.math library allows us to call for the BigInteger class, which allows us to manipulate the bits when sending
	image information in the method sendInfo() in the Websocket class.
	- java.net allows us to call for Socket and ServerSocket class, which allows us to build communication between the
	client and server. This is used at the very beginning of the Webserver class where we start building the TCP
	socket. 
	- java.security library allows us to call for the MessageDigest class, which allows us to secure a hash function
	and output a hash value. This is used to implement the Websocket handshake in Webserver class.
	- java.util allows us to call for ArrayList, Base64, HashMap, List, Scanner classes, which allows us to temporary
	keep track of inputs when we read the information being sent like connection, images, votes, comments in the
	Webserver, Websocket, and ClientsInformation class.
	- In order to run Docker for Java, it needs to be set up with Maven. Docker essentially creates
	a container that allows us to run individual servers at the same time. *This is set up in the
	"docker complete" branch.
	- Maven essentially ensures that the development variables between devices remain the same. 
	If libraries or files are missing, it searches for them and installs it.
	In order for Maven to successfully work, we need to install  JDK (Java Developers Kit) with the Java developers kit
	we can install a new Environment Variable for Java alongside Maven which is necessary to make maven work. 

3. The licenses or terms of service applied to these technologies:
	- Maven is open-source, therefore it is under Creative Commons. That means we have free acces to use, modify,
	and distribute the code promoted by Maven. (https://www.apache.org/licenses/LICENSE-2.0)